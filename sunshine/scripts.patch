diff --git a/scripts/linux_build.sh b/scripts/linux_build.sh
old mode 100644
new mode 100755
index fc423a2..f021e23
--- a/scripts/linux_build.sh
+++ b/scripts/linux_build.sh
@@ -10,7 +10,7 @@ skip_cleanup=0
 skip_cuda=0
 skip_libva=0
 skip_package=0
-sudo_cmd="sudo"
+sudo_cmd=""
 ubuntu_test_repo=0
 
 function _usage() {
@@ -339,23 +339,23 @@ function run_install() {
       --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-${gcc_version}
   fi
 
-  # compile cmake if the version is too low
-  cmake_min="3.25.0"
-  target_cmake_version="3.30.1"
-  if ! check_version "cmake" "$cmake_min"; then
-    cmake_prefix="https://github.com/Kitware/CMake/releases/download/v"
-    if [ "$architecture" == "x86_64" ]; then
-      cmake_arch="x86_64"
-    elif [ "$architecture" == "aarch64" ]; then
-      cmake_arch="aarch64"
-    fi
-    url="${cmake_prefix}${target_cmake_version}/cmake-${target_cmake_version}-linux-${cmake_arch}.sh"
-    echo "cmake url: ${url}"
-    wget "$url" --progress=bar:force:noscroll -q --show-progress -O "${build_dir}/cmake.sh"
-    ${sudo_cmd} sh "${build_dir}/cmake.sh" --skip-license --prefix=/usr/local
-    echo "cmake installed, version:"
-    cmake --version
-  fi
+  # # compile cmake if the version is too low
+  # cmake_min="3.25.0"
+  # target_cmake_version="3.30.1"
+  # if ! check_version "cmake" "$cmake_min"; then
+  #   cmake_prefix="https://github.com/Kitware/CMake/releases/download/v"
+  #   if [ "$architecture" == "x86_64" ]; then
+  #     cmake_arch="x86_64"
+  #   elif [ "$architecture" == "aarch64" ]; then
+  #     cmake_arch="aarch64"
+  #   fi
+  #   url="${cmake_prefix}${target_cmake_version}/cmake-${target_cmake_version}-linux-${cmake_arch}.sh"
+  #   echo "cmake url: ${url}"
+  #   wget "$url" --progress=bar:force:noscroll -q --show-progress -O "${build_dir}/cmake.sh"
+  #   ${sudo_cmd} sh "${build_dir}/cmake.sh" --skip-license --prefix=/usr/local
+  #   echo "cmake installed, version:"
+  #   cmake --version
+  # fi
 
   # compile doxygen if version is too low
   doxygen_min="1.10.0"
@@ -378,14 +378,14 @@ function run_install() {
   fi
 
   # install node from nvm
-  if [ "$nvm_node" == 1 ]; then
-    nvm_url="https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh"
-    echo "nvm url: ${nvm_url}"
-    wget -qO- ${nvm_url} | bash
-    source "$HOME/.nvm/nvm.sh"
-    nvm install node
-    nvm use node
-  fi
+  # if [ "$nvm_node" == 1 ]; then
+  #   nvm_url="https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh"
+  #   echo "nvm url: ${nvm_url}"
+  #   wget -qO- ${nvm_url} | bash
+  #   source "$HOME/.nvm/nvm.sh"
+  #   nvm install node
+  #   nvm use node
+  # fi
 
   # run the cuda install
   if [ -n "$cuda_version" ] && [ "$skip_cuda" == 0 ]; then
